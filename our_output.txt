4
LetExp(
 DecList(
  FunctionDec(nfactor
   FieldList(
    n,
    int,
    true,
    FieldList()),
   int,
   IfExp(
    OpExp(
     EQ,
     VarExp(
      SimpleVar(n))
     :NAME(int)
      =INT,
     IntExp(0)
     :INT)
    :INT,
    IntExp(1)
    :INT,
    OpExp(
     MUL,
     VarExp(
      SimpleVar(n))
     :NAME(int)
      =INT,
     CallExp(nfactor,
      ExpList(
       OpExp(
        MINUS,
        VarExp(
         SimpleVar(n))
        :NAME(int)
         =INT,
        IntExp(1)
        :INT)
       :INT))
     :NAME(int)
      =INT)
    :INT)
   :INT,
   FunctionDec())
  :RECORD(
    n
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(int)
     =INT,
  DecList()),
 CallExp(nfactor,
  ExpList(
   IntExp(10)
   :INT))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

5
LetExp(
 DecList(
  TypeDec(intlist,
   RecordTy(
    FieldList(
     hd,
     int,
     true,
     FieldList(
      tl,
      intlist,
      true,
      FieldList()))),
   TypeDec(tree,
    RecordTy(
     FieldList(
      key,
      int,
      true,
      FieldList(
       children,
       treelist,
       true,
       FieldList()))),
    TypeDec(treelist,
     RecordTy(
      FieldList(
       hd,
       tree,
       true,
       FieldList(
        tl,
        treelist,
        true,
        FieldList()))))
    =NAME(treelist)
     =RECORD(
       hd
       :NAME(tree)
        =RECORD(
          key
          :NAME(int)
           =INT,
          RECORD(
           children
           :NAME(treelist),
           RECORD())),
       RECORD(
        tl
        :NAME(treelist),
        RECORD())))
   =NAME(tree)
    =RECORD(
      key
      :NAME(int)
       =INT,
      RECORD(
       children
       :NAME(treelist)
        =RECORD(
          hd
          :NAME(tree),
          RECORD(
           tl
           :NAME(treelist),
           RECORD())),
       RECORD())))
  =NAME(intlist)
   =RECORD(
     hd
     :NAME(int)
      =INT,
     RECORD(
      tl
      :NAME(intlist),
      RECORD())),
  DecList(
   VarDec(lis,
    intlist,
    RecordExp(intlist,
     FieldExpList(
      hd,
      IntExp(0)
      :INT,
      FieldExpList(
       tl,
       NilExp()
       :NIL,
       FieldExpList())))
    :NAME(intlist)
     =RECORD(
       hd
       :NAME(int)
        =INT,
       RECORD(
        tl
        :NAME(intlist),
        RECORD())),
    true)
   :NAME(intlist)
    =RECORD(
      hd
      :NAME(int)
       =INT,
      RECORD(
       tl
       :NAME(intlist),
       RECORD())),
   DecList())),
 VarExp(
  SimpleVar(lis))
 :NAME(intlist)
  =RECORD(
    hd
    :NAME(int)
     =INT,
    RECORD(
     tl
     :NAME(intlist),
     RECORD())))
:NAME(intlist)
 =RECORD(
   hd
   :NAME(int)
    =INT,
   RECORD(
    tl
    :NAME(intlist),
    RECORD()))

6
LetExp(
 DecList(
  FunctionDec(do_nothing2
   FieldList(
    d,
    int,
    true,
    FieldList()),
   void,
   FunctionDec(do_nothing1
    FieldList(
     a,
     int,
     true,
     FieldList(
      b,
      string,
      true,
      FieldList())),
    void,
    CallExp(do_nothing2,
     ExpList(
      OpExp(
       PLUS,
       VarExp(
        SimpleVar(a))
       :NAME(int)
        =INT,
       IntExp(1)
       :INT)
      :INT))
    :NAME(void)
     =VOID,
    FunctionDec(do_nothing2
     FieldList(
      d,
      int,
      true,
      FieldList()),
     void,
     CallExp(do_nothing1,
      ExpList(
       VarExp(
        SimpleVar(d))
       :NAME(int)
        =INT,
       ExpList(
        StringExp(str)
        :STRING)))
     :NAME(void)
      =VOID,
     FunctionDec())
    :RECORD(
      d
      :NAME(int)
       =INT,
      RECORD())
     ->NAME(void)
       =VOID)
   :RECORD(
     a
     :NAME(int)
      =INT,
     RECORD(
      b
      :NAME(string)
       =STRING,
      RECORD()))
    ->NAME(void)
      =VOID)
  :RECORD(
    d
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(void)
     =VOID,
  DecList()),
 CallExp(do_nothing1,
  ExpList(
   IntExp(0)
   :INT,
   ExpList(
    StringExp(str2)
    :STRING)))
 :NAME(void)
  =VOID)
:NAME(void)
 =VOID

7
LetExp(
 DecList(
  FunctionDec(do_nothing2
   FieldList(
    d,
    int,
    true,
    FieldList()),
   string,
   FunctionDec(do_nothing1
    FieldList(
     a,
     int,
     true,
     FieldList(
      b,
      string,
      true,
      FieldList())),
    int,
    SeqExp(
     ExpList(
      CallExp(do_nothing2,
       ExpList(
        OpExp(
         PLUS,
         VarExp(
          SimpleVar(a))
         :NAME(int)
          =INT,
         IntExp(1)
         :INT)
        :INT))
      :NAME(string)
       =STRING,
      ExpList(
       IntExp(0)
       :INT)))
    :INT,
    FunctionDec(do_nothing2
     FieldList(
      d,
      int,
      true,
      FieldList()),
     string,
     SeqExp(
      ExpList(
       CallExp(do_nothing1,
        ExpList(
         VarExp(
          SimpleVar(d))
         :NAME(int)
          =INT,
         ExpList(
          StringExp(str)
          :STRING)))
       :NAME(int)
        =INT,
       ExpList(
        StringExp( )
        :STRING)))
     :STRING,
     FunctionDec())
    :RECORD(
      d
      :NAME(int)
       =INT,
      RECORD())
     ->NAME(string)
       =STRING)
   :RECORD(
     a
     :NAME(int)
      =INT,
     RECORD(
      b
      :NAME(string)
       =STRING,
      RECORD()))
    ->NAME(int)
      =INT)
  :RECORD(
    d
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(string)
     =STRING,
  DecList()),
 CallExp(do_nothing1,
  ExpList(
   IntExp(0)
   :INT,
   ExpList(
    StringExp(str2)
    :STRING)))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

8
IfExp(
 OpExp(
  GT,
  IntExp(10)
  :INT,
  IntExp(20)
  :INT)
 :INT,
 IntExp(30)
 :INT,
 IntExp(40)
 :INT)
:INT

9
IfExp(
 OpExp(
  GT,
  IntExp(5)
  :INT,
  IntExp(4)
  :INT)
 :INT,
 IntExp(13)
 :INT,
 StringExp( )
 :STRING)
:STRING

10
WhileExp(
 OpExp(
  GT,
  IntExp(10)
  :INT,
  IntExp(5)
  :INT)
 :INT,
 OpExp(
  PLUS,
  IntExp(5)
  :INT,
  IntExp(6)
  :INT)
 :INT)
:VOID

11
ForExp(
 VarDec(i,
  IntExp(10)
  :INT,
  true)
 :INT,
 StringExp( )
 :STRING,
 AssignExp(
  SimpleVar(i),
  OpExp(
   MINUS,
   VarExp(
    SimpleVar(i))
   :INT,
   IntExp(1)
   :INT)
  :INT)
 :VOID)
:VOID

12
LetExp(
 DecList(
  VarDec(a,
   IntExp(0)
   :INT,
   true)
  :INT,
  DecList()),
 ForExp(
  VarDec(i,
   IntExp(0)
   :INT,
   true)
  :INT,
  IntExp(100)
  :INT,
  SeqExp(
   ExpList(
    AssignExp(
     SimpleVar(a),
     OpExp(
      PLUS,
      VarExp(
       SimpleVar(a))
      :INT,
      IntExp(1)
      :INT)
     :INT)
    :VOID,
    ExpList(
     SeqExp(
      ExpList())
     :VOID)))
  :VOID)
 :VOID)
:VOID

13
OpExp(
 GT,
 IntExp(3)
 :INT,
 StringExp(df)
 :STRING)
:INT

14
LetExp(
 DecList(
  TypeDec(arrtype,
   ArrayTy(int),
   TypeDec(rectype,
    RecordTy(
     FieldList(
      name,
      string,
      true,
      FieldList(
       id,
       int,
       true,
       FieldList()))))
   =NAME(rectype)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())))
  =NAME(arrtype)
   =ARRAY(
     NAME(int)
     =INT),
  DecList(
   VarDec(rec,
    RecordExp(rectype,
     FieldExpList(
      name,
      StringExp(aname)
      :STRING,
      FieldExpList(
       id,
       IntExp(0)
       :INT,
       FieldExpList())))
    :NAME(rectype)
     =RECORD(
       name
       :NAME(string)
        =STRING,
       RECORD(
        id
        :NAME(int)
         =INT,
        RECORD())),
    true)
   :NAME(rectype)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())),
   DecList(
    VarDec(arr,
     ArrayExp(arrtype,
      IntExp(3)
      :INT,
      IntExp(0)
      :INT)
     :NAME(arrtype)
      =ARRAY(
        NAME(int)
        =INT),
     true)
    :NAME(arrtype)
     =ARRAY(
       NAME(int)
       =INT),
    DecList()))),
 IfExp(
  OpExp(
   NE,
   VarExp(
    SimpleVar(rec))
   :NAME(rectype)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())),
   VarExp(
    SimpleVar(arr))
   :NAME(arrtype)
    =ARRAY(
      NAME(int)
      =INT))
  :INT,
  IntExp(3)
  :INT,
  IntExp(4)
  :INT)
 :INT)
:INT

15
IfExp(
 IntExp(20)
 :INT,
 IntExp(3)
 :INT)
:VOID

16
LetExp(
 DecList(
  TypeDec(a,
   NameTy(c),
   TypeDec(b,
    NameTy(a),
    TypeDec(c,
     NameTy(d),
     TypeDec(d,
      NameTy(a))
     =NAME(d)
      =NAME(a)
       =NAME(c)
        =NAME(d))
    =NAME(c)
     =NAME(d)
      =NAME(a)
       =NAME(c))
   =NAME(b)
    =NAME(a)
     =NAME(c)
      =NAME(d)
       =NAME(a))
  =NAME(a)
   =NAME(c)
    =NAME(d)
     =NAME(a),
  DecList()),
 StringExp()
 :STRING)
:STRING

17
LetExp(
 DecList(
  TypeDec(tree,
   RecordTy(
    FieldList(
     key,
     int,
     true,
     FieldList(
      children,
      treelist,
      true,
      FieldList()))))
  =NAME(tree)
   =RECORD(
     key
     :NAME(int)
      =INT,
     RECORD(
      children
      :(),
      RECORD())),
  DecList(
   VarDec(d,
    int,
    IntExp(0)
    :INT,
    true)
   :NAME(int)
    =INT,
   DecList(
    TypeDec(treelist,
     RecordTy(
      FieldList(
       hd,
       tree,
       true,
       FieldList(
        tl,
        treelist,
        true,
        FieldList()))))
    =NAME(treelist)
     =RECORD(
       hd
       :NAME(tree)
        =RECORD(
          key
          :NAME(int)
           =INT,
          RECORD(
           children
           :(),
           RECORD())),
       RECORD(
        tl
        :NAME(treelist),
        RECORD())),
    DecList()))),
 VarExp(
  SimpleVar(d))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

18
LetExp(
 DecList(
  FunctionDec(do_nothing2
   FieldList(
    d,
    int,
    true,
    FieldList()),
   string,
   FunctionDec(do_nothing1
    FieldList(
     a,
     int,
     true,
     FieldList(
      b,
      string,
      true,
      FieldList())),
    int,
    SeqExp(
     ExpList(
      CallExp(do_nothing2,
       ExpList(
        OpExp(
         PLUS,
         VarExp(
          SimpleVar(a))
         :NAME(int)
          =INT,
         IntExp(1)
         :INT)
        :INT))
      :NAME(string)
       =STRING,
      ExpList(
       IntExp(0)
       :INT)))
    :INT,
    FunctionDec())
   :RECORD(
     a
     :NAME(int)
      =INT,
     RECORD(
      b
      :NAME(string)
       =STRING,
      RECORD()))
    ->NAME(int)
      =INT)
  :RECORD(
    d
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(string)
     =STRING,
  DecList(
   VarDec(d,
    IntExp(0)
    :INT,
    true)
   :INT,
   DecList(
    FunctionDec(do_nothing2
     FieldList(
      d,
      int,
      true,
      FieldList()),
     string,
     SeqExp(
      ExpList(
       CallExp(do_nothing1,
        ExpList(
         VarExp(
          SimpleVar(d))
         :NAME(int)
          =INT,
         ExpList(
          StringExp(str)
          :STRING)))
       :NAME(int)
        =INT,
       ExpList(
        StringExp( )
        :STRING)))
     :STRING,
     FunctionDec())
    :RECORD(
      d
      :NAME(int)
       =INT,
      RECORD())
     ->NAME(string)
       =STRING,
    DecList()))),
 CallExp(do_nothing1,
  ExpList(
   IntExp(0)
   :INT,
   ExpList(
    StringExp(str2)
    :STRING)))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

19
LetExp(
 DecList(
  FunctionDec(do_nothing2
   FieldList(
    d,
    int,
    true,
    FieldList()),
   string,
   FunctionDec(do_nothing1
    FieldList(
     a,
     int,
     true,
     FieldList(
      b,
      string,
      true,
      FieldList())),
    int,
    SeqExp(
     ExpList(
      CallExp(do_nothing2,
       ExpList(
        OpExp(
         PLUS,
         VarExp(
          SimpleVar(a))
         :NAME(int)
          =INT,
         IntExp(1)
         :INT)
        :INT))
      :NAME(string)
       =STRING,
      ExpList(
       IntExp(0)
       :INT)))
    :INT,
    FunctionDec(do_nothing2
     FieldList(
      d,
      int,
      true,
      FieldList()),
     string,
     SeqExp(
      ExpList(
       CallExp(do_nothing1,
        ExpList(
         VarExp(
          SimpleVar(a))
         :VOID,
         ExpList(
          StringExp(str)
          :STRING)))
       :NAME(int)
        =INT,
       ExpList(
        StringExp( )
        :STRING)))
     :STRING,
     FunctionDec())
    :RECORD(
      d
      :NAME(int)
       =INT,
      RECORD())
     ->NAME(string)
       =STRING)
   :RECORD(
     a
     :NAME(int)
      =INT,
     RECORD(
      b
      :NAME(string)
       =STRING,
      RECORD()))
    ->NAME(int)
      =INT)
  :RECORD(
    d
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(string)
     =STRING,
  DecList()),
 CallExp(do_nothing1,
  ExpList(
   IntExp(0)
   :INT,
   ExpList(
    StringExp(str2)
    :STRING)))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

20
WhileExp(
 OpExp(
  GT,
  IntExp(10)
  :INT,
  IntExp(5)
  :INT)
 :INT,
 SeqExp(
  ExpList(
   OpExp(
    PLUS,
    VarExp(
     SimpleVar(i))
    :VOID,
    IntExp(1)
    :INT)
   :INT,
   ExpList(
    SeqExp(
     ExpList())
    :VOID)))
 :VOID)
:VOID

21
LetExp(
 DecList(
  FunctionDec(nfactor
   FieldList(
    n,
    int,
    true,
    FieldList()),
   void,
   IfExp(
    OpExp(
     EQ,
     VarExp(
      SimpleVar(n))
     :NAME(int)
      =INT,
     IntExp(0)
     :INT)
    :INT,
    IntExp(1)
    :INT,
    OpExp(
     MUL,
     VarExp(
      SimpleVar(n))
     :NAME(int)
      =INT,
     CallExp(nfactor,
      ExpList(
       OpExp(
        MINUS,
        VarExp(
         SimpleVar(n))
        :NAME(int)
         =INT,
        IntExp(1)
        :INT)
       :INT))
     :NAME(void)
      =VOID)
    :INT)
   :INT,
   FunctionDec())
  :RECORD(
    n
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(void)
     =VOID,
  DecList()),
 CallExp(nfactor,
  ExpList(
   IntExp(10)
   :INT))
 :NAME(void)
  =VOID)
:NAME(void)
 =VOID

22
LetExp(
 DecList(
  TypeDec(rectype,
   RecordTy(
    FieldList(
     name,
     string,
     true,
     FieldList(
      id,
      int,
      true,
      FieldList()))))
  =NAME(rectype)
   =RECORD(
     name
     :NAME(string)
      =STRING,
     RECORD(
      id
      :NAME(int)
       =INT,
      RECORD())),
  DecList(
   VarDec(rec1,
    RecordExp(rectype,
     FieldExpList(
      name,
      StringExp(Name)
      :STRING,
      FieldExpList(
       id,
       IntExp(0)
       :INT,
       FieldExpList())))
    :NAME(rectype)
     =RECORD(
       name
       :NAME(string)
        =STRING,
       RECORD(
        id
        :NAME(int)
         =INT,
        RECORD())),
    true)
   :NAME(rectype)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())),
   DecList())),
 AssignExp(
  FieldVar(
   SimpleVar(rec1),
   nam),
  StringExp(asd)
  :STRING)
 :VOID)
:VOID

23
LetExp(
 DecList(
  TypeDec(rectype,
   RecordTy(
    FieldList(
     name,
     string,
     true,
     FieldList(
      id,
      int,
      true,
      FieldList()))))
  =NAME(rectype)
   =RECORD(
     name
     :NAME(string)
      =STRING,
     RECORD(
      id
      :NAME(int)
       =INT,
      RECORD())),
  DecList(
   VarDec(rec1,
    RecordExp(rectype,
     FieldExpList(
      name,
      StringExp(aname)
      :STRING,
      FieldExpList(
       id,
       IntExp(0)
       :INT,
       FieldExpList())))
    :NAME(rectype)
     =RECORD(
       name
       :NAME(string)
        =STRING,
       RECORD(
        id
        :NAME(int)
         =INT,
        RECORD())),
    true)
   :NAME(rectype)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())),
   DecList())),
 SeqExp(
  ExpList(
   AssignExp(
    FieldVar(
     SimpleVar(rec1),
     name),
    IntExp(3)
    :INT)
   :VOID,
   ExpList(
    AssignExp(
     FieldVar(
      SimpleVar(rec1),
      id),
     StringExp()
     :STRING)
    :VOID)))
 :VOID)
:VOID

24
LetExp(
 DecList(
  VarDec(d,
   IntExp(0)
   :INT,
   true)
  :INT,
  DecList()),
 VarExp(
  SubscriptVar(
   SimpleVar(d),
   IntExp(3)
   :INT))
 :VOID)
:VOID

25
LetExp(
 DecList(
  VarDec(d,
   IntExp(0)
   :INT,
   true)
  :INT,
  DecList()),
 VarExp(
  FieldVar(
   SimpleVar(d),
   f))
 :VOID)
:VOID

26
OpExp(
 PLUS,
 IntExp(3)
 :INT,
 StringExp(var)
 :STRING)
:INT

27
LetExp(
 DecList(
  VarDec(a,
   IntExp(0)
   :INT,
   true)
  :INT,
  DecList(
   FunctionDec(g
    FieldList(
     a,
     int,
     true,
     FieldList()),
    int,
    VarExp(
     SimpleVar(a))
    :NAME(int)
     =INT,
    FunctionDec())
   :RECORD(
     a
     :NAME(int)
      =INT,
     RECORD())
    ->NAME(int)
      =INT,
   DecList())),
 CallExp(g,
  ExpList(
   IntExp(2)
   :INT))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

28
LetExp(
 DecList(
  TypeDec(rectype1,
   RecordTy(
    FieldList(
     name,
     string,
     true,
     FieldList(
      id,
      int,
      true,
      FieldList()))),
   TypeDec(rectype2,
    RecordTy(
     FieldList(
      name,
      string,
      true,
      FieldList(
       id,
       int,
       true,
       FieldList()))))
   =NAME(rectype2)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())))
  =NAME(rectype1)
   =RECORD(
     name
     :NAME(string)
      =STRING,
     RECORD(
      id
      :NAME(int)
       =INT,
      RECORD())),
  DecList(
   VarDec(rec1,
    rectype1,
    RecordExp(rectype2,
     FieldExpList(
      name,
      StringExp(Name)
      :STRING,
      FieldExpList(
       id,
       IntExp(0)
       :INT,
       FieldExpList())))
    :NAME(rectype2)
     =RECORD(
       name
       :NAME(string)
        =STRING,
       RECORD(
        id
        :NAME(int)
         =INT,
        RECORD())),
    true)
   :NAME(rectype1)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())),
   DecList())),
 VarExp(
  SimpleVar(rec1))
 :NAME(rectype1)
  =RECORD(
    name
    :NAME(string)
     =STRING,
    RECORD(
     id
     :NAME(int)
      =INT,
     RECORD())))
:NAME(rectype1)
 =RECORD(
   name
   :NAME(string)
    =STRING,
   RECORD(
    id
    :NAME(int)
     =INT,
    RECORD()))

29
LetExp(
 DecList(
  TypeDec(arrtype1,
   ArrayTy(int),
   TypeDec(arrtype2,
    ArrayTy(int))
   =NAME(arrtype2)
    =ARRAY(
      NAME(int)
      =INT))
  =NAME(arrtype1)
   =ARRAY(
     NAME(int)
     =INT),
  DecList(
   VarDec(arr1,
    arrtype1,
    ArrayExp(arrtype2,
     IntExp(10)
     :INT,
     IntExp(0)
     :INT)
    :NAME(arrtype2)
     =ARRAY(
       NAME(int)
       =INT),
    true)
   :NAME(arrtype1)
    =ARRAY(
      NAME(int)
      =INT),
   DecList())),
 VarExp(
  SimpleVar(arr1))
 :NAME(arrtype1)
  =ARRAY(
    NAME(int)
    =INT))
:NAME(arrtype1)
 =ARRAY(
   NAME(int)
   =INT)

30
LetExp(
 DecList(
  TypeDec(a,
   ArrayTy(int),
   TypeDec(b,
    NameTy(a))
   =NAME(b)
    =NAME(a)
     =ARRAY(
       NAME(int)
       =INT))
  =NAME(a)
   =ARRAY(
     NAME(int)
     =INT),
  DecList(
   VarDec(arr1,
    a,
    ArrayExp(b,
     IntExp(10)
     :INT,
     IntExp(0)
     :INT)
    :NAME(b)
     =NAME(a)
      =ARRAY(
        NAME(int)
        =INT),
    true)
   :NAME(a)
    =ARRAY(
      NAME(int)
      =INT),
   DecList())),
 VarExp(
  SubscriptVar(
   SimpleVar(arr1),
   IntExp(2)
   :INT))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

31
LetExp(
 DecList(
  VarDec(a,
   int,
   StringExp( )
   :STRING,
   true)
  :NAME(int)
   =INT,
  DecList()),
 VarExp(
  SimpleVar(a))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

32
LetExp(
 DecList(
  TypeDec(arrayty,
   ArrayTy(int))
  =NAME(arrayty)
   =ARRAY(
     NAME(int)
     =INT),
  DecList(
   VarDec(a,
    ArrayExp(arrayty,
     IntExp(10)
     :INT,
     StringExp( )
     :STRING)
    :NAME(arrayty)
     =ARRAY(
       NAME(int)
       =INT),
    true)
   :NAME(arrayty)
    =ARRAY(
      NAME(int)
      =INT),
   DecList())),
 IntExp(0)
 :INT)
:INT

33
LetExp(
 DecList(
  VarDec(a,
   RecordExp(rectype,
    FieldExpList())
   :VOID,
   true)
  :VOID,
  DecList()),
 IntExp(0)
 :INT)
:INT

34
LetExp(
 DecList(
  FunctionDec(g
   FieldList(
    a,
    int,
    true,
    FieldList(
     b,
     string,
     true,
     FieldList())),
   int,
   VarExp(
    SimpleVar(a))
   :NAME(int)
    =INT,
   FunctionDec())
  :RECORD(
    a
    :NAME(int)
     =INT,
    RECORD(
     b
     :NAME(string)
      =STRING,
     RECORD()))
   ->NAME(int)
     =INT,
  DecList()),
 CallExp(g,
  ExpList(
   StringExp(one)
   :STRING,
   ExpList(
    StringExp(two)
    :STRING)))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

35
LetExp(
 DecList(
  FunctionDec(g
   FieldList(
    a,
    int,
    true,
    FieldList(
     b,
     string,
     true,
     FieldList())),
   int,
   VarExp(
    SimpleVar(a))
   :NAME(int)
    =INT,
   FunctionDec())
  :RECORD(
    a
    :NAME(int)
     =INT,
    RECORD(
     b
     :NAME(string)
      =STRING,
     RECORD()))
   ->NAME(int)
     =INT,
  DecList()),
 CallExp(g,
  ExpList(
   StringExp(one)
   :STRING))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

36
LetExp(
 DecList(
  FunctionDec(g
   FieldList(
    a,
    int,
    true,
    FieldList(
     b,
     string,
     true,
     FieldList())),
   int,
   VarExp(
    SimpleVar(a))
   :NAME(int)
    =INT,
   FunctionDec())
  :RECORD(
    a
    :NAME(int)
     =INT,
    RECORD(
     b
     :NAME(string)
      =STRING,
     RECORD()))
   ->NAME(int)
     =INT,
  DecList()),
 CallExp(g,
  ExpList(
   IntExp(3)
   :INT,
   ExpList(
    StringExp(one)
    :STRING,
    ExpList(
     IntExp(5)))))
 :NAME(int)
  =INT)
:NAME(int)
 =INT

37
LetExp(
 DecList(
  VarDec(a,
   IntExp(0)
   :INT,
   true)
  :INT,
  DecList(
   VarDec(a,
    StringExp( )
    :STRING,
    true)
   :STRING,
   DecList())),
 IntExp(0)
 :INT)
:INT

38
LetExp(
 DecList(
  TypeDec(a,
   NameTy(int),
   TypeDec(a,
    NameTy(string))
   =NAME(a)
    =NAME(string)
     =STRING)
  =NAME(a)
   =NAME(int)
    =INT,
  DecList()),
 IntExp(0)
 :INT)
:INT

39
LetExp(
 DecList(
  FunctionDec(g
   FieldList(
    a,
    int,
    true,
    FieldList()),
   int,
   VarExp(
    SimpleVar(a))
   :NAME(int)
    =INT,
   FunctionDec(g
    FieldList(
     a,
     int,
     true,
     FieldList()),
    int,
    VarExp(
     SimpleVar(a))
    :NAME(int)
     =INT,
    FunctionDec())
   :RECORD(
     a
     :NAME(int)
      =INT,
     RECORD())
    ->NAME(int)
      =INT)
  :RECORD(
    a
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(int)
     =INT,
  DecList()),
 IntExp(0)
 :INT)
:INT

40
LetExp(
 DecList(
  FunctionDec(g
   FieldList(
    a,
    int,
    true,
    FieldList()),
   void,
   VarExp(
    SimpleVar(a))
   :NAME(int)
    =INT,
   FunctionDec())
  :RECORD(
    a
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(void)
     =VOID,
  DecList()),
 CallExp(g,
  ExpList(
   IntExp(2)
   :INT))
 :NAME(void)
  =VOID)
:NAME(void)
 =VOID

41
LetExp(
 DecList(
  TypeDec(a,
   NameTy(int))
  =NAME(a)
   =NAME(int)
    =INT,
  DecList()),
 LetExp(
  DecList(
   TypeDec(a,
    NameTy(string))
   =NAME(a)
    =NAME(string)
     =STRING,
   DecList()),
  IntExp(0)
  :INT)
 :INT)
:INT

42
LetExp(
 DecList(
  TypeDec(arrtype1,
   ArrayTy(int),
   TypeDec(rectype1,
    RecordTy(
     FieldList(
      name,
      string,
      true,
      FieldList(
       address,
       string,
       true,
       FieldList(
        id,
        int,
        true,
        FieldList(
         age,
         int,
         true,
         FieldList()))))),
    TypeDec(arrtype2,
     ArrayTy(rectype1),
     TypeDec(rectype2,
      RecordTy(
       FieldList(
        name,
        string,
        true,
        FieldList(
         dates,
         arrtype1,
         true,
         FieldList()))))
     =NAME(rectype2)
      =RECORD(
        name
        :NAME(string)
         =STRING,
        RECORD(
         dates
         :NAME(arrtype1)
          =ARRAY(
            NAME(int)
            =INT),
         RECORD())))
    =NAME(arrtype2)
     =ARRAY(
       NAME(rectype1)
       =RECORD(
         name
         :NAME(string)
          =STRING,
         RECORD(
          address
          :NAME(string)
           =STRING,
          RECORD(
           id
           :NAME(int)
            =INT,
           RECORD(
            age
            :NAME(int)
             =INT,
            RECORD()))))))
   =NAME(rectype1)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       address
       :NAME(string)
        =STRING,
       RECORD(
        id
        :NAME(int)
         =INT,
        RECORD(
         age
         :NAME(int)
          =INT,
         RECORD())))))
  =NAME(arrtype1)
   =ARRAY(
     NAME(int)
     =INT),
  DecList(
   VarDec(arr1,
    ArrayExp(arrtype1,
     IntExp(10)
     :INT,
     IntExp(0)
     :INT)
    :NAME(arrtype1)
     =ARRAY(
       NAME(int)
       =INT),
    true)
   :NAME(arrtype1)
    =ARRAY(
      NAME(int)
      =INT),
   DecList(
    VarDec(arr2,
     ArrayExp(arrtype2,
      IntExp(5)
      :INT,
      RecordExp(rectype1,
       FieldExpList(
        name,
        StringExp(aname)
        :STRING,
        FieldExpList(
         address,
         StringExp(somewhere)
         :STRING,
         FieldExpList(
          id,
          IntExp(0)
          :INT,
          FieldExpList(
           age,
           IntExp(0)
           :INT,
           FieldExpList())))))
      :NAME(rectype1)
       =RECORD(
         name
         :NAME(string)
          =STRING,
         RECORD(
          address
          :NAME(string)
           =STRING,
          RECORD(
           id
           :NAME(int)
            =INT,
           RECORD(
            age
            :NAME(int)
             =INT,
            RECORD())))))
     :NAME(arrtype2)
      =ARRAY(
        NAME(rectype1)
        =RECORD(
          name
          :NAME(string)
           =STRING,
          RECORD(
           address
           :NAME(string)
            =STRING,
           RECORD(
            id
            :NAME(int)
             =INT,
            RECORD(
             age
             :NAME(int)
              =INT,
             RECORD()))))),
     true)
    :NAME(arrtype2)
     =ARRAY(
       NAME(rectype1)
       =RECORD(
         name
         :NAME(string)
          =STRING,
         RECORD(
          address
          :NAME(string)
           =STRING,
          RECORD(
           id
           :NAME(int)
            =INT,
           RECORD(
            age
            :NAME(int)
             =INT,
            RECORD()))))),
    DecList(
     VarDec(arr3,
      arrtype3,
      ArrayExp(arrtype3,
       IntExp(100)
       :INT,
       StringExp()
       :STRING)
      :VOID,
      true)
     :VOID,
     DecList(
      VarDec(rec1,
       RecordExp(rectype1,
        FieldExpList(
         name,
         StringExp(Kapoios)
         :STRING,
         FieldExpList(
          address,
          StringExp(Kapou)
          :STRING,
          FieldExpList(
           id,
           IntExp(2432)
           :INT,
           FieldExpList(
            age,
            IntExp(44)
            :INT,
            FieldExpList())))))
       :NAME(rectype1)
        =RECORD(
          name
          :NAME(string)
           =STRING,
          RECORD(
           address
           :NAME(string)
            =STRING,
           RECORD(
            id
            :NAME(int)
             =INT,
            RECORD(
             age
             :NAME(int)
              =INT,
             RECORD())))),
       true)
      :NAME(rectype1)
       =RECORD(
         name
         :NAME(string)
          =STRING,
         RECORD(
          address
          :NAME(string)
           =STRING,
          RECORD(
           id
           :NAME(int)
            =INT,
           RECORD(
            age
            :NAME(int)
             =INT,
            RECORD())))),
      DecList(
       VarDec(rec2,
        RecordExp(rectype2,
         FieldExpList(
          name,
          StringExp(Allos)
          :STRING,
          FieldExpList(
           dates,
           ArrayExp(arrtype1,
            IntExp(3)
            :INT,
            IntExp(1900)
            :INT)
           :NAME(arrtype1)
            =ARRAY(
              NAME(int)
              =INT),
           FieldExpList())))
        :NAME(rectype2)
         =RECORD(
           name
           :NAME(string)
            =STRING,
           RECORD(
            dates
            :NAME(arrtype1)
             =ARRAY(
               NAME(int)
               =INT),
            RECORD())),
        true)
       :NAME(rectype2)
        =RECORD(
          name
          :NAME(string)
           =STRING,
          RECORD(
           dates
           :NAME(arrtype1)
            =ARRAY(
              NAME(int)
              =INT),
           RECORD())),
       DecList())))))),
 SeqExp(
  ExpList(
   AssignExp(
    SubscriptVar(
     SimpleVar(arr1),
     IntExp(0)
     :INT),
    IntExp(1)
    :INT)
   :VOID,
   ExpList(
    AssignExp(
     SubscriptVar(
      SimpleVar(arr1),
      IntExp(9)
      :INT),
     IntExp(3)
     :INT)
    :VOID,
    ExpList(
     AssignExp(
      FieldVar(
       SubscriptVar(
        SimpleVar(arr2),
        IntExp(3)
        :INT),
       name),
      StringExp(kati)
      :STRING)
     :VOID,
     ExpList(
      AssignExp(
       FieldVar(
        SubscriptVar(
         SimpleVar(arr2),
         IntExp(1)
         :INT),
        age),
       IntExp(23)
       :INT)
      :VOID,
      ExpList(
       AssignExp(
        SubscriptVar(
         SimpleVar(arr3),
         IntExp(34)
         :INT),
        StringExp(sfd)
        :STRING)
       :VOID,
       ExpList(
        AssignExp(
         FieldVar(
          SimpleVar(rec1),
          name),
         StringExp(sdf)
         :STRING)
        :VOID,
        ExpList(
         AssignExp(
          SubscriptVar(
           FieldVar(
            SimpleVar(rec2),
            dates),
           IntExp(0)
           :INT),
          IntExp(2323)
          :INT)
         :VOID,
         ExpList(
          AssignExp(
           SubscriptVar(
            FieldVar(
             SimpleVar(rec2),
             dates),
            IntExp(2)
            :INT),
           IntExp(2323)
           :INT)
          :VOID)))))))))
 :VOID)
:VOID

43
LetExp(
 DecList(
  VarDec(a,
   SeqExp(
    ExpList())
   :VOID,
   true)
  :VOID,
  DecList()),
 OpExp(
  PLUS,
  VarExp(
   SimpleVar(a))
  :VOID,
  IntExp(3)
  :INT)
 :INT)
:INT

44
LetExp(
 DecList(
  TypeDec(rectype,
   RecordTy(
    FieldList(
     name,
     string,
     true,
     FieldList(
      id,
      int,
      true,
      FieldList()))))
  =NAME(rectype)
   =RECORD(
     name
     :NAME(string)
      =STRING,
     RECORD(
      id
      :NAME(int)
       =INT,
      RECORD())),
  DecList(
   VarDec(b,
    rectype,
    NilExp()
    :NIL,
    true)
   :NAME(rectype)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())),
   DecList())),
 AssignExp(
  SimpleVar(b),
  NilExp()
  :NIL)
 :VOID)
:VOID

45
LetExp(
 DecList(
  TypeDec(rectype,
   RecordTy(
    FieldList(
     name,
     string,
     true,
     FieldList(
      id,
      int,
      true,
      FieldList()))))
  =NAME(rectype)
   =RECORD(
     name
     :NAME(string)
      =STRING,
     RECORD(
      id
      :NAME(int)
       =INT,
      RECORD())),
  DecList(
   VarDec(a,
    SeqExp(
     ExpList())
    :VOID,
    true)
   :VOID,
   DecList())),
 VarExp(
  SimpleVar(a))
 :VOID)
:VOID

46
LetExp(
 DecList(
  TypeDec(rectype,
   RecordTy(
    FieldList(
     name,
     string,
     true,
     FieldList(
      id,
      int,
      true,
      FieldList()))))
  =NAME(rectype)
   =RECORD(
     name
     :NAME(string)
      =STRING,
     RECORD(
      id
      :NAME(int)
       =INT,
      RECORD())),
  DecList(
   VarDec(b,
    rectype,
    NilExp()
    :NIL,
    true)
   :NAME(rectype)
    =RECORD(
      name
      :NAME(string)
       =STRING,
      RECORD(
       id
       :NAME(int)
        =INT,
       RECORD())),
   DecList())),
 SeqExp(
  ExpList(
   OpExp(
    EQ,
    VarExp(
     SimpleVar(b))
    :NAME(rectype)
     =RECORD(
       name
       :NAME(string)
        =STRING,
       RECORD(
        id
        :NAME(int)
         =INT,
        RECORD())),
    NilExp()
    :NIL)
   :INT,
   ExpList(
    OpExp(
     NE,
     VarExp(
      SimpleVar(b))
     :NAME(rectype)
      =RECORD(
        name
        :NAME(string)
         =STRING,
        RECORD(
         id
         :NAME(int)
          =INT,
         RECORD())),
     NilExp()
     :NIL)
    :INT)))
 :INT)
:INT

47
LetExp(
 DecList(
  TypeDec(a,
   NameTy(int))
  =NAME(a)
   =NAME(int)
    =INT,
  DecList(
   VarDec(b,
    IntExp(4)
    :INT,
    true)
   :INT,
   DecList(
    TypeDec(a,
     NameTy(string))
    =NAME(a)
     =NAME(string)
      =STRING,
    DecList()))),
 IntExp(0)
 :INT)
:INT

48
LetExp(
 DecList(
  FunctionDec(g
   FieldList(
    a,
    int,
    true,
    FieldList()),
   int,
   VarExp(
    SimpleVar(a))
   :NAME(int)
    =INT,
   FunctionDec())
  :RECORD(
    a
    :NAME(int)
     =INT,
    RECORD())
   ->NAME(int)
     =INT,
  DecList(
   TypeDec(t,
    NameTy(int))
   =NAME(t)
    =NAME(int)
     =INT,
   DecList(
    FunctionDec(g
     FieldList(
      a,
      int,
      true,
      FieldList()),
     int,
     VarExp(
      SimpleVar(a))
     :NAME(int)
      =INT,
     FunctionDec())
    :RECORD(
      a
      :NAME(int)
       =INT,
      RECORD())
     ->NAME(int)
       =INT,
    DecList()))),
 IntExp(0)
 :INT)
:INT
